dev.txt # sbt
sbt projects
sbt ecosystem/console

---

# TODO fix tests
* (ecosystem) com.github.niqdev.cats.EqSpec (scalactic conflict)
* (ecosystem) com.github.niqdev.cats.ValidatedSpec
* (fp) com.github.niqdev.FunctorSpec
* (fp) com.github.niqdev.ApplicativeSpec
* (fp) com.github.niqdev.MonadSpec
* (fp) com.github.niqdev.FunctorLawsProp
* (fp) com.github.niqdev.MonadLawsProp

---

# tracing
https://speakerdeck.com/kubukoz/keep-your-sanity-with-compositional-tracing
https://github.com/kubukoz/talks/tree/master/compositional-tracing
https://github.com/tpolecat/natchez
https://github.com/janstenpickle/trace4cats

# magnolia
https://propensive.com/opensource/magnolia
https://propensive.com/opensource/magnolia/tutorial
https://github.com/propensive/magnolia/tree/master/examples/shared/src/main/scala
https://www.youtube.com/watch?v=MKryAwl068Q

https://github.com/circe/circe-magnolia
https://github.com/alexarchambault/scalacheck-shapeless
https://github.com/typelevel/scalacheck/blob/master/doc/UserGuide.md

# scalacheck-magnolia
https://github.com/etaty/scalacheck-magnolia
https://github.com/implmnt/scalacheck-magnolia
https://github.com/spotify/magnolify
https://github.com/laurence-bird/scalacheck-magnolia

# profiling
https://www.lihaoyi.com/post/MicrooptimizingyourScalacode.html
https://www.lightbend.com/blog/profiling-jvm-applications
https://www.scala-lang.org/blog/2018/06/04/scalac-profiling.html

# optics
https://scalac.io/blog/scala-optics-lenses-with-monocle
https://www.optics.dev/Monocle

# cats mtl
https://guillaumebogard.dev/posts/functional-error-handling

# Interpreter for AP++ imperative language (lexer, parser, evaluator)
https://github.com/mohammaduzair9/Interpreter

# e2e/it tests
https://github.com/whisklabs/docker-it-scala
https://github.com/testcontainers/testcontainers-java

# maths
https://xenaproject.wordpress.com/2020/06/20/mathematics-in-type-theory
# Recommend a maths book for a teenager?
https://news.ycombinator.com/item?id=23711942
https://www.quantamagazine.org
https://mathvault.ca/euler-formula
https://stopa.io/post/263

# Abstract Algebra
https://m.youtube.com/playlist?list=PLi01XoE8jYoi3SgnnGorR_XOW3IcK-TP6
# Abstract Algebra I
https://www.youtube.com/playlist?list=PLBY4G2o7DhF0JCgapYKrqibGaJuvV4Gkb
# Sets, Groups, Rings and Algebras
https://www.csee.umbc.edu/portal/help/theory/group_def.shtml

# Linear Algebra (free book)
https://hefferon.net/linearalgebra/index.html
# Introduction to Linear Algebra for Applied Machine Learning with Python
https://pabloinsente.github.io/intro-linear-algebra

# An Interactive Introduction to Fourier Transforms
http://www.jezzamon.com/fourier/index.html

---

# haskell
https://www.youtube.com/c/GrahamHuttonNotts/playlists
https://www.schoolofhaskell.com/user/bartosz/basics-of-haskell
https://github.com/raviksharma/bartosz-basics-of-haskell
https://kowainik.github.io
https://chrispenner.ca/posts/wc
https://sras.me/haskell/miscellaneous-enlightenments.html
# Generalizing 'Jq' And Traversal Systems Using Optics And Standard Monads
https://chrispenner.ca/posts/traversal-systems

# CIS 194: Introduction to Haskell (Spring 2013)
https://www.cis.upenn.edu/~cis194/spring13

---

### recursion-schemas

# in haskell
https://www.reddit.com/r/haskell/comments/9x684a/edward_kmett_there_and_back_again_regular_and
https://medium.com/@jaredtobin/practical-recursion-schemes-c10648ec1c29
https://bartoszmilewski.com/2018/08/20/recursion-schemes-for-higher-algebras
https://blog.sumtypeofway.com/posts/introduction-to-recursion-schemes.html

# more
https://github.com/passy/awesome-recursion-schemes
http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.125

# A path to Recursion Schemes
https://www.youtube.com/watch?v=ngnzCv7M92c
# Category Theory in Life
https://www.youtube.com/watch?v=ho7oagHeqNc

# Unifying Structured Recursion Schemes
http://www.cs.ox.ac.uk/jeremy.gibbons/publications/urs.pdf

---

# settings example
javaOptions ++= Seq(
  "-Xmx1G",
  "-Xms1G",
  "-XX:+UseG1GC",
  "-XX:+UseStringDeduplication",
  "-XX:+UseNUMA",
  "-XX:+UseCompressedOops",
  "-XX:+AggressiveOpts",
  "-XX:+UseBiasedLocking",
  "-XX:+UseFastAccessorMethods",
  "-XX:NewRatio=2",
  "-XX:-ReduceInitialCardMarks",
  "-XX:+HeapDumpOnOutOfMemoryError",
  "-XX:HeapDumpPath=/app/logs",
  "-XX:OnOutOfMemoryError=kill -9 %p",
  "-XX:-OmitStackTraceInFastThrow",
  "-Djava.net.preferIPv4Stack=true",
  "-Djava.security.egd=file:/dev/urandom",
  "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005",
  s"-Dconfig.resource=${Option(System.getProperty("config.resource")).getOrElse("application.conf")}"
)

---

# scala tests
https://orrsella.com/2014/09/24/integration-and-end-to-end-test-configurations-in-sbt-for-scala-java-projects
http://www.unstablebuild.com/2017/04/13/scala-projects-and-integration-tests.html
https://alexromanov.github.io/2016/07/15/cucumber-scala-sbt
https://github.com/lewismj/cucumber
https://github.com/jecklgamis/cucumber-jvm-scala-example
https://localstack.cloud

# sbt complex alias
https://github.com/pauldijou/jwt-scala/blob/master/build.sbt#L15

# java agent
https://stackoverflow.com/questions/11898566/tutorials-about-javaagents

# scala
https://stackoverflow.com/questions/4593710/when-should-i-and-should-i-not-use-scalas-inline-annotation
https://stackoverflow.com/questions/2709095/does-the-inline-annotation-in-scala-really-help-performance
https://stackoverflow.com/questions/27855714/type-selection-type-projection-what-is-st-in-scala-scala-language-specifica
https://stackoverflow.com/questions/2693067/what-is-meant-by-scalas-path-dependent-types
https://github.com/estatico/scala-newtype
https://medium.com/@mattroberts297/automatic-type-class-derivation-with-shapeless-part-one-a1251c5f9e16
https://appddeevvmeanderings.blogspot.com/2019/08/functional-web-client-made-easy-dotty.html
https://cucumbersome.net/2020/11/28/four-new-features-of-scala-2-13-releases-that-you-probably-missed

* jmx, mbeans, jconsole, jolokia, jstat, javap, jmh
* add notes from JVM memory course, jps
java -XX:+PrintFlagsFinal -version

# how to write a toy JVM
https://zserge.com/posts/jvm

# Ladder of Functional Programming
https://pbs.twimg.com/media/CydL5EYUsAAI-61.jpg:large
