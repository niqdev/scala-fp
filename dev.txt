# sbt
sbt projects
sbt ecosystem/console

---

# TODO fix tests
* (ecosystem) com.github.niqdev.cats.EqSpec (scalactic conflict)
* (ecosystem) com.github.niqdev.cats.ValidatedSpec
* (fp) com.github.niqdev.FunctorSpec
* (fp) com.github.niqdev.ApplicativeSpec
* (fp) com.github.niqdev.MonadSpec
* (fp) com.github.niqdev.FunctorLawsProp
* (fp) com.github.niqdev.MonadLawsProp

---

# TODO
* fix plugin example in multi-module project

---

# tracing
https://speakerdeck.com/kubukoz/keep-your-sanity-with-compositional-tracing
https://github.com/kubukoz/talks/tree/master/compositional-tracing
https://github.com/tpolecat/natchez

# magnolia
https://propensive.com/opensource/magnolia
https://propensive.com/opensource/magnolia/tutorial
https://github.com/propensive/magnolia/tree/master/examples/shared/src/main/scala
https://www.youtube.com/watch?v=MKryAwl068Q

https://github.com/circe/circe-magnolia
https://github.com/alexarchambault/scalacheck-shapeless
https://github.com/typelevel/scalacheck/blob/master/doc/UserGuide.md

# scalacheck-magnolia
https://github.com/etaty/scalacheck-magnolia
https://github.com/implmnt/scalacheck-magnolia
https://github.com/spotify/magnolify
https://github.com/laurence-bird/scalacheck-magnolia

# profiling
https://www.lihaoyi.com/post/MicrooptimizingyourScalacode.html
https://www.lightbend.com/blog/profiling-jvm-applications
https://www.scala-lang.org/blog/2018/06/04/scalac-profiling.html

# recursion-schemas
https://github.com/precog/matryoshka
https://github.com/higherkindness/droste
https://akmetiuk.com/posts/2017-03-10-matryoshka-intro.html
https://kubuszok.com/2019/ast-playground-recursion-schemes-and-recursive-data
https://www.47deg.com/blog/recursion-schemes-introduction
https://github.com/vil1/recursion-schemes-cookbook
# haskell
https://www.reddit.com/r/haskell/comments/9x684a/edward_kmett_there_and_back_again_regular_and
https://medium.com/@jaredtobin/practical-recursion-schemes-c10648ec1c29
https://bartoszmilewski.com/2018/08/20/recursion-schemes-for-higher-algebras
https://blog.sumtypeofway.com/posts/introduction-to-recursion-schemes.html
# more
https://github.com/passy/awesome-recursion-schemes
http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.125
# Peeling the Banana: Recursion Schemes from First Principles
https://www.youtube.com/watch?v=XZ9nPZbaYfE
# Practical Droste - live coding with Beni Villa
https://www.youtube.com/watch?v=YBEc0Upntjg
# Category Theory in Life
https://www.youtube.com/watch?v=ho7oagHeqNc

# free boolean
https://arosien.github.io/talks/free-boolean-algebras.html

# compilers
http://www.craftinginterpreters.com
https://the-super-tiny-compiler.glitch.me
https://godbolt.org
https://www.amazon.com/Compilers-Principles-Techniques-Tools-2nd-dp-0321486811/dp/0321486811
https://www.amazon.com/Structure-Interpretation-Computer-Programs-Engineering/dp/0262510871
https://www.amazon.com/Recursive-Programming-Techniques-Systems-programming/dp/0201144506
